// <auto-generated />
using System;
using BMG_db.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BMGdb.Migrations
{
    [DbContext(typeof(BankDBContext))]
    [Migration("20241231093942_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BMG_db.Models.Account", b =>
                {
                    b.Property<string>("account_id")
                        .HasColumnType("varchar(255)");

                    b.Property<double>("balance")
                        .HasColumnType("double");

                    b.Property<DateTime?>("close_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("customer_id")
                        .HasColumnType("varchar(255)");

                    b.Property<double>("interest_rate")
                        .HasColumnType("double");

                    b.Property<DateTime?>("open_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("account_id");

                    b.HasIndex("customer_id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("BMG_db.Models.Branch", b =>
                {
                    b.Property<string>("branch_id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("branch_id");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("BMG_db.Models.Customer", b =>
                {
                    b.Property<string>("customer_id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("address")
                        .HasColumnType("longtext");

                    b.Property<string>("branch_id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("dob")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("customer_id");

                    b.HasIndex("branch_id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BMG_db.Models.Employee", b =>
                {
                    b.Property<string>("employee_id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("branch_id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("designation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("dob")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("doj")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("employee_id");

                    b.HasIndex("branch_id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("BMG_db.Models.Loan", b =>
                {
                    b.Property<string>("loan_id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("allocated_months")
                        .HasColumnType("int");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("credit_account_id")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("customer_id")
                        .HasColumnType("varchar(255)");

                    b.Property<double>("roi")
                        .HasColumnType("double");

                    b.HasKey("loan_id");

                    b.HasIndex("customer_id");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("BMG_db.Models.Locker", b =>
                {
                    b.Property<string>("locker_id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("customer_id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("key")
                        .HasColumnType("longtext");

                    b.Property<float?>("rent")
                        .HasColumnType("float");

                    b.Property<DateTime?>("start_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("locker_id");

                    b.HasIndex("customer_id");

                    b.ToTable("Lockers");
                });

            modelBuilder.Entity("BMG_db.Models.Login", b =>
                {
                    b.Property<string>("user_id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("clearence_level")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("user_id");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("BMG_db.Models.Transaction", b =>
                {
                    b.Property<string>("transaction_id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("account_id")
                        .HasColumnType("varchar(255)");

                    b.Property<double>("amount")
                        .HasColumnType("double");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("receiver_id")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("sender_id")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("transaction_id");

                    b.HasIndex("account_id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("BMG_db.Models.Account", b =>
                {
                    b.HasOne("BMG_db.Models.Customer", null)
                        .WithMany("accounts")
                        .HasForeignKey("customer_id");
                });

            modelBuilder.Entity("BMG_db.Models.Customer", b =>
                {
                    b.HasOne("BMG_db.Models.Branch", null)
                        .WithMany("customers")
                        .HasForeignKey("branch_id");
                });

            modelBuilder.Entity("BMG_db.Models.Employee", b =>
                {
                    b.HasOne("BMG_db.Models.Branch", null)
                        .WithMany("employees")
                        .HasForeignKey("branch_id");
                });

            modelBuilder.Entity("BMG_db.Models.Loan", b =>
                {
                    b.HasOne("BMG_db.Models.Customer", null)
                        .WithMany("loans")
                        .HasForeignKey("customer_id");
                });

            modelBuilder.Entity("BMG_db.Models.Locker", b =>
                {
                    b.HasOne("BMG_db.Models.Customer", null)
                        .WithMany("lockers")
                        .HasForeignKey("customer_id");
                });

            modelBuilder.Entity("BMG_db.Models.Transaction", b =>
                {
                    b.HasOne("BMG_db.Models.Account", null)
                        .WithMany("transactions")
                        .HasForeignKey("account_id");
                });

            modelBuilder.Entity("BMG_db.Models.Account", b =>
                {
                    b.Navigation("transactions");
                });

            modelBuilder.Entity("BMG_db.Models.Branch", b =>
                {
                    b.Navigation("customers");

                    b.Navigation("employees");
                });

            modelBuilder.Entity("BMG_db.Models.Customer", b =>
                {
                    b.Navigation("accounts");

                    b.Navigation("loans");

                    b.Navigation("lockers");
                });
#pragma warning restore 612, 618
        }
    }
}
